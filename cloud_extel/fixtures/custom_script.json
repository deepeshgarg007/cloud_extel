[
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Company",
  "modified": "2020-05-15 21:17:16.200853",
  "name": "Company-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Company', {\n\trefresh(frm) {\n\t\tfrm.set_query(\"tds_account\", \"accounts\", function(doc) {\n        \treturn {\n        \t\tfilters: {'company': frm.doc.name}\n        \t}\n        });\n\t}\n})"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Sales Invoice",
  "modified": "2020-05-28 11:01:15.427361",
  "name": "Sales Invoice-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Sales Invoice', {\n    refresh: function(frm) {\n        if (frm.doc.docstatus == 1 && frm.doc.outstanding_amount !== 0) {\n\t\t    frm.add_custom_button(__('Payment with TDS'), function() {\n\t\t        frappe.call({\n\t\t            'method': 'erpnext.accounts.doctype.payment_entry.payment_entry.get_payment_entry',\n\t\t            'args': {\n\t\t                'dt': frm.doc.doctype,\n\t\t                'dn': frm.doc.name\n\t\t            },\n\t\t            'callback': function(r) {\n\t\t                var doclist = frappe.model.sync(r.message);\n\t\t                frappe.db.get_value('Company', frm.doc.company, ['gross_tds_account', 'cost_center'], function (value) {\n\t\t                    let tds_amount = flt(frm.doc.net_total * 10)/100;\n\t\t                    doclist[0].paid_amount = frm.doc.net_total - tds_amount;\n    \t\t                doclist[0].received_amount = frm.doc.net_total - tds_amount;\n    \t\t                var d = frappe.model.add_child(doclist[0], 'Payment Entry Deduction', 'deductions');\n    \t\t                d.account = value.gross_tds_account;\n    \t\t                d.cost_center = value.cost_center;\n    \t\t                d.amount = tds_amount;\n    \t\t                refresh_fields('deductions');\n\t\t                });\n\t\t                \n\t\t                frappe.set_route(\"Form\", doclist[0].doctype, doclist[0].name);\n\t\t            } \n\t\t        });\n\t\t    });\n\t\t}    \n    },\n    \n\tcustomer: function(frm) {\n\t\tfrm.trigger('fetch_details');\n\t},\n\t\n\tterritory: function(frm) {\n\t    frm.trigger('fetch_details');\n\t},\n\n\tcost_center: function(frm) {\n\t    frm.trigger('fetch_details');\n\t},\n\t\n\tfetch_details: function(frm) {\n\t    if (!frm.doc.customer || !frm.doc.territory || !frm.doc.cost_center) {\n\t        return;\n\t    }\n\t    \n\t    frappe.call({\n\t\t\tmethod: 'get_income_accounts',\n\t\t\targs: {\n\t\t\t\t'customer': frm.doc.customer,\n\t\t\t\t'telecom_circle': frm.doc.telecom_circle,\n\t\t\t\t'cost_center': frm.doc.cost_center\n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\tif(r.message) {\n\n\t\t\t\t    if (r.message['accounts']) {\n\t\t\t\t       frm.set_query('income_account', 'items', function() {\n    \t\t\t\t        return {\n    \t\t\t\t            filters: {\n    \t\t\t\t                'name': ['in', r.message['accounts']]\n    \t\t\t\t            }\n    \t\t\t\t        }\n\t\t\t\t        }); \n\t\t\t        }\n\t\t\t        \n\t\t\t        if (r.message['address']) {\n\t\t\t            frm.set_value('customer_address', r.message['address']);\n\t\t\t        }\n\t\t\t        \n\t\t\t        if (r.message['contact_person']) {\n\t\t\t            frm.set_value('contact_person', r.message['contact_person'])\n\t\t\t        }\n\t\t\t\t}\n\t\t\t}\n\t\t});   \n\t}\n})"
 }
]